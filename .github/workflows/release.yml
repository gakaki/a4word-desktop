name: Build and Release
on:
  # - push
  # - pull_request
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - '*.*.*'
## reference: https://electron-vite.org/guide/distribution
jobs:
  release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: [23]

    steps:
      - name: Github checkout
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 9
          run_install: false

      - name: Install Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: build-linux
        if: matrix.os == 'ubuntu-latest'
        run: pnpm run build:linux

      - name: build-mac
        if: matrix.os == 'macos-latest'
        run: pnpm run build:mac

      - name: build-win
        if: matrix.os == 'windows-latest'
        run: pnpm run build:win

      # - name: Show Package files location
      #   run: ls -R dist # 根据你的输出目录调整路径

      # abacefty123li
      ## 感觉有了release 需要 artifact  release极好了 注意release 必须推tag 才能触发release 这个action 是个坑 要注意
      # - name: Upload Artifacts
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: ${{ matrix.os }}-build
      #     path: dist/*

      # - name: Download Artifacts
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: ${{ matrix.os }}-build
      #     path: ./artifacts      
      - name: Release Text
        run: echo ${{ github.sha }} > Release.txt
      - name: Test Release Text
        run: cat Release.txt
        
      # - name: Tag the repository
      #   id: tag
      #   run: |
      #     # See https://docs.github.com/en/get-started/using-git/dealing-with-special-characters-in-branch-and-tag-names
      #     TAG=v$(date -Iseconds | sed 's/[T:\+]/-/g')
      #     echo "$TAG"
      #     echo "tag=$TAG" >> $GITHUB_OUTPUT
      #     git tag -a $TAG -m "Published version $TAG" ${GITHUB_SHA}
      #     git push origin $TAG
# Run # See https://docs.github.com/en/get-started/using-git/dealing-with-special-characters-in-branch-and-tag-names
# TAG=v$(date -Iseconds | sed 's/[T:\+]/-/g'): D:\a\_temp\4fc464b9-4bd5-4eee-9e93-ad7f69874b35.ps1:3
# Line |
#    3 |  TAG=v$(date -Iseconds | sed 's/[T:\+]/-/g')
#      |  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#      | The term 'TAG=v$(date -Iseconds | sed 's/[T:\+]/-/g')' is not recognized as a name of a cmdlet, function, script
#      | file, or executable program. Check the spelling of the name, or if a path was included, verify that the path is
#      | correct and try again.
# Error: Process completed with exit code 1.


      - name: release
        uses: softprops/action-gh-release@v2
        with:
          # tag_name: ${GITHUB_SHA}
          draft: true
          files: |
            dist/*.exe
            dist/*.zip
            dist/*.dmg
            dist/*.AppImage
            dist/*.snap
            dist/*.deb
            dist/*.rpm
            dist/*.tar.gz
            # dist/*.yml
            # dist/*.blockmap
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    
      # - name: Upload Release Assets
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./artifacts/*
      #     asset_name: ${{ matrix.os }}-build.zip
      #     asset_content_type: application/zip